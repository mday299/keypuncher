# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  config.vm.box = "saptarshithe42/ubuntu-desktop-22-04-minimal-installation"

  # Optional: Install vbguest plugin to automate Guest Additions updates
  if Vagrant.has_plugin?("vagrant-vbguest")
    config.vbguest.auto_update = true
  else
    puts "WARNING: Install the 'vagrant-vbguest' plugin for automatic Guest Additions updates."
  end

  # Memory, CPUs, and video memory
  config.vm.provider "virtualbox" do |vb|
    vb.gui = true
    vb.name = "Ubuntu22.04_desktop"
    vb.memory = "12048"           # Adjust memory (MB)
    vb.cpus = 4                 # Number of CPUs
    vb.customize ["modifyvm", :id, "--vram", "64"]  # Video memory (MB) 
    vb.customize ["modifyvm", :id, "--clipboard", "bidirectional"]  # Bidirectional clipboard

    # Custom VMDK size (20GB)
    #vb.customize ["createhd", "--filename", "custom_disk.vmdk", "--size", 20480]
    #vb.customize ["storagectl", :id, "--name", "SATA Controller", "--add", "sata", "--controller", "IntelAHCI"]
    #vb.customize ["storageattach", :id, "--storagectl", "SATA Controller", "--port", 1, "--device", 0, "--type", "hdd", "--medium", "custom_disk.vmdk"]
  end

  # Shared folder setup
  #config.vm.synced_folder "./shared", "/home/vagrant/shared", create: true

  # Provisioning (optional)
  # TODO: remove unneccesary packages like rythmbox, thunderbird, etc.
  #config.vm.provision "shell", inline: <<-SHELL
  #  echo "Provisioning VM..."
  #  sudo apt-get update
  #  sudo apt-get install -y build-essential dkms linux-headers-$(uname -r)
  #  sudo apt install build-essential dkms linux-headers-$(uname -r) wget bash-completion bzip2 synaptic
  #
  #SHELL

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"
end
